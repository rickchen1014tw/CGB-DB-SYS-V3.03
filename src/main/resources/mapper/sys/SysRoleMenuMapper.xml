<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.sys.dao.SysRoleMenuDao">
	<!-- 基於菜單id刪除關係數據 -->
	<delete id="deleteObjectsByMenuId">
		delete from sys_role_menus
		where menu_id=#{menuId}
	</delete>
		<!-- 基於角色id刪除關係數據 -->
	<delete id="deleteObjectsByRoleId">
		delete from sys_role_menus
		where role_id=#{roleId}
	</delete>
	
	<!--  
	<delete id="deleteObjectsByColumnId">
		delete from sys_role_menus
		where ${column}=#{id}
	</delete>
	上網查詢"mybatis $和#"，有詳解
	可以寫${id}沒問題，但可能會有SQL注入攻擊問題, $是字符取代拼接
	一般傳值的時候很少用$，$最好的應用場景是去替換表名跟列名
	如果用這條sql語句取代上面兩條，不過方法要改成傳2個參數
	-->
	
	<!-- 寫入角色和菜單的關係數據 -->
	<insert id="insertObjects">
		insert into sys_role_menus
		(role_id,menu_id)
		values <!-- (1,2),(1,3),(1,4) -->
		<foreach collection="menuIds" separator="," item="menuId" >
			(#{roleId},#{menuId})
		</foreach>
	</insert>
	
	<!-- 基於角色id獲取菜單id -->
	<select id="findMenuIdsByRoleId" resultType="int">
		select menu_id
		from sys_role_menus
		where role_id=#{id}
	</select>
	
	<select id="findMenuIdsByRoleIds" resultType="int">
		select menu_id
		from sys_role_menus
		where role_id in <!-- (1,2,3,4) -->
		<foreach collection="roleIds" open="(" close=")" separator="," item="roleId">
			#{roleId}
		</foreach>
	</select>
</mapper>